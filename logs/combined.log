{"date":"2023-03-18T11:55:21.390Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs"}
{"date":"2023-03-18T11:55:21.465Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/"}
{"date":"2023-03-18T11:55:21.630Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui.css"}
{"date":"2023-03-18T11:55:21.633Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui-bundle.js"}
{"date":"2023-03-18T11:55:21.640Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui-standalone-preset.js"}
{"date":"2023-03-18T11:55:21.644Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui-init.js"}
{"date":"2023-03-18T11:55:23.331Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/favicon-32x32.png"}
{"date":"2023-03-18T11:56:28.283Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/"}
{"date":"2023-03-18T11:56:28.376Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui.css"}
{"date":"2023-03-18T11:56:28.382Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui-bundle.js"}
{"date":"2023-03-18T11:56:28.386Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui-init.js"}
{"date":"2023-03-18T11:56:28.398Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui-standalone-preset.js"}
{"date":"2023-03-18T11:56:28.964Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/favicon-32x32.png"}
{"date":"2023-03-18T12:02:10.800Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/"}
{"date":"2023-03-18T12:02:10.885Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui.css"}
{"date":"2023-03-18T12:02:10.889Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui-bundle.js"}
{"date":"2023-03-18T12:02:10.903Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui-standalone-preset.js"}
{"date":"2023-03-18T12:02:10.906Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui-init.js"}
{"date":"2023-03-18T12:02:11.324Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/favicon-32x32.png"}
{"date":"2023-03-18T12:04:34.661Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/"}
{"date":"2023-03-18T12:04:34.744Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui.css"}
{"date":"2023-03-18T12:04:34.759Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui-bundle.js"}
{"date":"2023-03-18T12:04:34.770Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui-standalone-preset.js"}
{"date":"2023-03-18T12:04:34.773Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui-init.js"}
{"date":"2023-03-18T12:04:35.172Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/favicon-32x32.png"}
{"date":"2023-03-18T12:04:48.524Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/"}
{"date":"2023-03-18T12:04:48.581Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui.css"}
{"date":"2023-03-18T12:04:48.591Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui-bundle.js"}
{"date":"2023-03-18T12:04:48.604Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui-standalone-preset.js"}
{"date":"2023-03-18T12:04:48.609Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui-init.js"}
{"date":"2023-03-18T12:04:49.064Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/favicon-32x32.png"}
{"date":"2023-03-18T12:05:49.706Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/"}
{"date":"2023-03-18T12:05:49.785Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui.css"}
{"date":"2023-03-18T12:05:49.802Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui-bundle.js"}
{"date":"2023-03-18T12:05:49.816Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui-standalone-preset.js"}
{"date":"2023-03-18T12:05:49.825Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui-init.js"}
{"date":"2023-03-18T12:05:50.213Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/favicon-32x32.png"}
{"date":"2023-03-18T12:07:05.429Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/"}
{"date":"2023-03-18T12:07:05.494Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui.css"}
{"date":"2023-03-18T12:07:05.501Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui-bundle.js"}
{"date":"2023-03-18T12:07:05.514Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui-standalone-preset.js"}
{"date":"2023-03-18T12:07:05.520Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui-init.js"}
{"date":"2023-03-18T12:07:05.974Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/favicon-32x32.png"}
{"date":"2023-03-18T12:09:27.137Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/"}
{"date":"2023-03-18T12:09:27.200Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui.css"}
{"date":"2023-03-18T12:09:27.204Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui-bundle.js"}
{"date":"2023-03-18T12:09:27.213Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui-standalone-preset.js"}
{"date":"2023-03-18T12:09:27.231Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui-init.js"}
{"date":"2023-03-18T12:09:27.598Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/favicon-32x32.png"}
{"date":"2023-03-18T12:10:43.626Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/"}
{"date":"2023-03-18T12:10:43.728Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui.css"}
{"date":"2023-03-18T12:10:43.735Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui-bundle.js"}
{"date":"2023-03-18T12:10:43.741Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui-standalone-preset.js"}
{"date":"2023-03-18T12:10:43.755Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui-init.js"}
{"date":"2023-03-18T12:10:44.968Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/favicon-32x32.png"}
{"date":"2023-03-18T12:11:20.372Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/"}
{"date":"2023-03-18T12:11:20.452Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui.css"}
{"date":"2023-03-18T12:11:20.471Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui-bundle.js"}
{"date":"2023-03-18T12:11:20.475Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui-init.js"}
{"date":"2023-03-18T12:11:20.480Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui-standalone-preset.js"}
{"date":"2023-03-18T12:11:21.001Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/favicon-32x32.png"}
{"date":"2023-03-18T12:12:15.984Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/"}
{"date":"2023-03-18T12:12:16.073Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui.css"}
{"date":"2023-03-18T12:12:16.085Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui-standalone-preset.js"}
{"date":"2023-03-18T12:12:16.101Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui-bundle.js"}
{"date":"2023-03-18T12:12:16.104Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui-init.js"}
{"date":"2023-03-18T12:12:16.472Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/favicon-32x32.png"}
{"date":"2023-03-18T12:13:28.892Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/favicon-32x32.png"}
{"date":"2023-03-18T12:13:28.921Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/"}
{"date":"2023-03-18T12:13:29.107Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui.css"}
{"date":"2023-03-18T12:13:29.117Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui-bundle.js"}
{"date":"2023-03-18T12:13:29.121Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui-standalone-preset.js"}
{"date":"2023-03-18T12:13:29.123Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui-init.js"}
{"date":"2023-03-18T12:13:32.976Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/"}
{"date":"2023-03-18T12:13:33.029Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui.css"}
{"date":"2023-03-18T12:13:33.040Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui-bundle.js"}
{"date":"2023-03-18T12:13:33.049Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui-standalone-preset.js"}
{"date":"2023-03-18T12:13:33.056Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui-init.js"}
{"date":"2023-03-18T12:13:33.422Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/favicon-32x32.png"}
{"date":"2023-03-18T12:13:56.838Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/"}
{"date":"2023-03-18T12:13:56.912Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui.css"}
{"date":"2023-03-18T12:13:56.930Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui-bundle.js"}
{"date":"2023-03-18T12:13:56.937Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui-init.js"}
{"date":"2023-03-18T12:13:56.942Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui-standalone-preset.js"}
{"date":"2023-03-18T12:13:57.288Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/favicon-32x32.png"}
{"date":"2023-03-18T12:14:06.576Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/"}
{"date":"2023-03-18T12:14:06.625Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui.css"}
{"date":"2023-03-18T12:14:06.631Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui-bundle.js"}
{"date":"2023-03-18T12:14:06.646Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui-standalone-preset.js"}
{"date":"2023-03-18T12:14:06.657Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui-init.js"}
{"date":"2023-03-18T12:14:06.947Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/favicon-32x32.png"}
{"date":"2023-03-18T12:14:40.464Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/"}
{"date":"2023-03-18T12:14:40.572Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui.css"}
{"date":"2023-03-18T12:14:40.578Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui-bundle.js"}
{"date":"2023-03-18T12:14:40.586Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui-standalone-preset.js"}
{"date":"2023-03-18T12:14:40.609Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/swagger-ui-init.js"}
{"date":"2023-03-18T12:14:41.266Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/favicon-32x32.png"}
{"date":"2023-03-18T12:29:00.797Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/"}
{"date":"2023-03-18T12:30:38.116Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/"}
{"date":"2023-03-18T12:38:23.451Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/api-docs/"}
{"date":"2025-03-09T12:16:23.348Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/user"}
{"date":"2025-03-09T12:16:25.449Z","level":"error","message":"\nInvalid `prisma.user.create()` invocation in\nD:\\GitHub\\psql-learning\\src\\controllers\\user.controller.ts:11:39\n\n   8 // #swagger.tags = ['user']\n   9 try {\n  10   const { name, email } = req.body;\n→ 11   const newUser = await prisma.user.create(\nError querying the database: ERROR: password authentication failed for user 'neondb_owner'","method":"POST","service":"user-service","url":"/"}
{"date":"2025-03-09T12:23:04.527Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/user"}
{"date":"2025-03-09T12:23:06.449Z","level":"error","message":"\nInvalid `prisma.user.create()` invocation in\nD:\\GitHub\\psql-learning\\src\\controllers\\user.controller.ts:11:39\n\n   8 // #swagger.tags = ['user']\n   9 try {\n  10   const { name, email } = req.body;\n→ 11   const newUser = await prisma.user.create(\nError querying the database: ERROR: password authentication failed for user 'neondb_owner'","method":"POST","service":"user-service","url":"/"}
{"date":"2025-03-09T12:23:10.691Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/user"}
{"date":"2025-03-09T12:23:12.480Z","level":"error","message":"\nInvalid `prisma.user.create()` invocation in\nD:\\GitHub\\psql-learning\\src\\controllers\\user.controller.ts:11:39\n\n   8 // #swagger.tags = ['user']\n   9 try {\n  10   const { name, email } = req.body;\n→ 11   const newUser = await prisma.user.create(\nError querying the database: ERROR: password authentication failed for user 'neondb_owner'","method":"POST","service":"user-service","url":"/"}
{"date":"2025-03-09T12:37:40.360Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/user"}
{"date":"2025-03-09T12:42:21.745Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/user"}
{"date":"2025-03-09T12:42:51.177Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/user"}
{"date":"2025-03-09T12:42:52.232Z","level":"error","message":"\nInvalid `prisma.user.create()` invocation in\nD:\\GitHub\\psql-learning\\src\\controllers\\user.controller.ts:11:39\n\n   8 // #swagger.tags = ['user']\n   9 try {\n  10   const { name, email } = req.body;\n→ 11   const newUser = await prisma.user.create(\nUnique constraint failed on the fields: (`email`)","method":"POST","service":"user-service","url":"/"}
{"date":"2025-03-09T12:45:20.756Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/user/profile"}
{"date":"2025-03-09T12:45:21.367Z","level":"error","message":"\nInvalid `prisma.userProfile.create()` invocation in\nD:\\GitHub\\psql-learning\\src\\controllers\\user.controller.ts:32:49\n\n  29 // #swagger.tags = ['user']\n  30 try {\n  31   const { bio, avatarUrl, userId } = req.body;\n→ 32   const newProfile = await prisma.userProfile.create(\nAn operation failed because it depends on one or more records that were required but not found. No 'User' record (needed to inline connect on create for 'UserProfile' record) was found for a nested connect on one-to-one relation 'UserToUserProfile'.","method":"POST","service":"user-service","url":"/profile"}
{"date":"2025-03-09T12:45:33.722Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/user/profile"}
{"date":"2025-03-09T12:46:48.481Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/user/profile"}
{"date":"2025-03-09T12:48:33.812Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/category"}
{"date":"2025-03-09T12:48:42.791Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/category"}
{"date":"2025-03-09T12:48:46.634Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/category"}
{"date":"2025-03-09T12:48:55.044Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/category"}
{"date":"2025-03-09T12:49:00.276Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/category"}
{"date":"2025-03-09T12:49:13.649Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/category"}
{"date":"2025-03-09T12:49:19.947Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/category"}
{"date":"2025-03-09T12:59:58.451Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/category"}
{"date":"2025-03-09T12:59:59.233Z","level":"error","message":"\nInvalid `prisma.category.create()` invocation in\nD:\\GitHub\\psql-learning\\src\\controllers\\category.controller.ts:10:47\n\n   7 // #swagger.tags = ['post']\n   8 try {\n   9   const { name } = req.body;\n→ 10   const newCategory = await prisma.category.create({\n         data: {\n       +   name: String\n         }\n       })\n\nArgument `name` is missing.","method":"POST","service":"user-service","url":"/"}
{"date":"2025-03-09T13:00:29.493Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/post"}
{"date":"2025-03-09T13:00:52.309Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/post"}
{"date":"2025-03-09T13:01:33.821Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/post"}
{"date":"2025-03-09T13:02:07.409Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/post"}
{"date":"2025-03-09T13:03:05.060Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/post"}
{"date":"2025-03-09T13:06:39.653Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/user/4c25e9dc-a50c-4ee9-b640-2b36a58a64df"}
{"date":"2025-03-09T13:08:39.569Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/user/4c25e9dc-a50c-4ee9-b640-2b36a58a64df"}
{"date":"2025-03-09T13:09:10.957Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/user/6166782a-995d-4008-93de-8797ee8cc067"}
{"date":"2025-03-09T13:11:11.143Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/user/profile"}
{"date":"2025-03-09T13:11:11.277Z","level":"error","message":"\nInvalid `prisma.userProfile.create()` invocation in\nD:\\GitHub\\psql-learning\\src\\controllers\\user.controller.ts:50:49\n\n  47 // #swagger.tags = ['user']\n  48 try {\n  49   const { bio, avatarUrl, userId } = req.body;\n→ 50   const newProfile = await prisma.userProfile.create({\n         data: {\n           bio: undefined,\n           avatarUrl: undefined,\n           user: {\n             connect: {\n               id: undefined,\n       ?       email?: String,\n       ?       profileId?: String,\n       ?       AND?: UserWhereInput | UserWhereInput[],\n       ?       OR?: UserWhereInput[],\n       ?       NOT?: UserWhereInput | UserWhereInput[],\n       ?       name?: StringFilter | String,\n       ?       createdAt?: DateTimeFilter | DateTime,\n       ?       updatedAt?: DateTimeFilter | DateTime,\n       ?       profile?: UserProfileNullableRelationFilter | UserProfileWhereInput | Null,\n       ?       posts?: PostListRelationFilter,\n       ?       comments?: CommentListRelationFilter\n             }\n           }\n         }\n       })\n\nArgument `connect` of type UserWhereUniqueInput needs at least one of `id`, `email` or `profileId` arguments. Available options are marked with ?.","method":"POST","service":"user-service","url":"/profile"}
{"date":"2025-03-09T13:11:45.156Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/post/comment"}
{"date":"2025-03-09T13:12:22.622Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/post/comment"}
{"date":"2025-03-09T13:13:28.655Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/post/comment"}
{"date":"2025-03-09T13:14:20.399Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/post/comment"}
{"date":"2025-03-09T13:14:49.911Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/post/comment"}
{"date":"2025-03-09T13:14:57.317Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/user/4c25e9dc-a50c-4ee9-b640-2b36a58a64df"}
{"date":"2025-03-09T13:15:39.735Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/post/comment"}
{"date":"2025-03-09T14:25:39.904Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/user"}
{"date":"2025-03-09T14:26:14.929Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/user/profile"}
{"date":"2025-03-09T14:26:46.053Z","level":"info","message":"Request received","method":"POST","service":"user-service","url":"/post/comment"}
{"date":"2025-03-09T14:27:59.802Z","level":"info","message":"Request received","method":"DELETE","service":"user-service","url":"/user/ef5d5586-e68c-4809-9d4e-d29ecaf485bf"}
{"date":"2025-03-09T15:47:28.686Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/user/latest-posts"}
{"date":"2025-03-09T15:48:24.285Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/user/latest-posts"}
{"date":"2025-03-09T15:49:14.159Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/user/latest-posts"}
{"date":"2025-03-09T15:50:27.411Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/user/stats/6166782a-995d-4008-93de-8797ee8cc067"}
{"date":"2025-03-09T15:50:44.264Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/user/stats/4c25e9dc-a50c-4ee9-b640-2b36a58a64df"}
{"date":"2025-03-09T15:50:54.238Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/user/latest-posts"}
{"date":"2025-03-09T15:52:24.956Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/post"}
{"date":"2025-03-09T15:56:26.670Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/post"}
{"date":"2025-03-09T15:57:19.465Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/post?page=1&limit=2"}
{"date":"2025-03-09T15:57:33.087Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/post?page=2&limit=2"}
{"date":"2025-03-09T15:57:45.090Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/post?page=3&limit=2"}
{"date":"2025-03-09T15:58:35.184Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/post/category"}
{"date":"2025-03-09T15:59:46.314Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/post/trending"}
{"date":"2025-03-09T16:00:23.269Z","level":"info","message":"Request received","method":"GET","service":"user-service","url":"/post/trending-categories"}
